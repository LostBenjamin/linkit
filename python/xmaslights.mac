# ----------------------------------------------------------------
# Xmas Lights v.0.0 4/0/19
# ----------------------------------------------------------------

%include symbols
%include hsl-sequencer

# pick a set of colors, repeat them, have some blink randomly
# mix in white also
# rainbow




$draw-mode <DRAW-WRITE>
$brightness <BRIGHTNESS-AUTO>
$render-time 120
$fade-rate 9000
$num-instances 12
$color-time 100
$brightening <MEDIUM-HEAVY>
$cycle-time 30000
$num-blinkers 15
$use-rainbow-colors True
$effect-time 500
$num-rainbow-colors 6
$flash-time 5
$set-fade-type fast-fade

%allow-mutability
#$hsl-sequencer-ANGLE ` int( 360 / <num-instances> ) `
$hsl-sequencer-ANGLE 60
$hsl-sequencer-TIME <color-time>

%play-macro mellow

[start 11]
    start-application

<<< <draw-mode> != <DRAW-WRITE>
    # set the preset draw mode
    <draw-mode>
    set-draw-mode
>>> 

<<< <brightness> != <BRIGHTNESS-AUTO>
    # set the preset brightness level
    <brightness>
    set-brightness
>>>

    (start-up)


[mellow 10]
    start-application
    (common-setup)
    (setup-mellow)
    (setup-mellow <cycle-time>)
    continue


[setup-mellow]
#    (common-setup)

<<< not <use-rainbow-colors>
    (add-random-colors)

    <add-blinker>, <num-blinkers>
    run-macro
>>>

<<< <use-rainbow-colors>
    erase-buffer
    (add-rainbow-colors)
>>>

    # refesh the palette
    (hsl-sequencer-step)

    do-crossfade

<<< not <use-rainbow-colors>
[add-random-colors]
    shuffle-palette

    <num-rainbow-colors>, <PASTE>
    paste

    <num-rainbow-colors>
    duplicate
>>>

<<< <use-rainbow-colors>
[add-rainbow-colors]
#    reset-palette
   
#    0, <num-rainbow-colors>
#    add-palette-colors

#    {{{
        (set-dynamic-colors)
 
        <num-rainbow-colors>
        duplicate
#    }}}

    (add-effect <effect-time>)
>>>    

[set-dynamic-colors]
#    {seq-util}, <num-rainbow-colors>
#    start-wheel-sequence
#    <set-next-dynamic-color>, <num-rainbow-colors>
#    run-macro
    <PURPLE>
    add-dynamic-color
    <BLUE>
    add-dynamic-color
    <GREEN>
    add-dynamic-color
    <YELLOW>
    add-dynamic-color
    <ORANGE>
    add-dynamic-color
    <RED>,0,1
    add-dynamic-color


#[set-next-dynamic-color]
#    {seq-util}
#    advance-sequence
#    add-dynamic-color


[add-effect]
    <RANDOM-POSITION-FILLED>
    set-random-position
    {{
#        {{{
#            white
#            <brightening>
#            brighten
#        }}}

#        <flash-time>
#        delay

        {{{
#            white
            gray
            <set-fade-type>
        }}}
    }}

[common-setup]

    # start up the palette color sequencer
    (hsl-sequencer-start)

    # schedule the display rendering
    (render <render-time>)


<<< not <use-rainbow-colors>
[add-blinker]
    set-random-position
    {{
        white
        <brightening>
        brighten
        set-blink
    }}
>>>

[lamp 12]
    start-application

    0
    add-dynamic-color
    fill

    (common-setup)


[demo 13]
    (start)


[start-up]
    # start the macro instances
    [[[init <num-instances>]]]

    <num-instances>, <AUTO-FILL>, ` int( <NUM-LEDS> / <num-instances>) `
    duplicate

    (common-setup)

((( macro <num-instances> INSTANCE )))

[[macro INSTANCE PALETTE

    [init-INSTANCE]
        # set up the sequencers
        (setup-INSTANCE)

    [setup-INSTANCE]
        PALETTE
        add-dynamic-color 
]]

