# ----------------------------------------------------------------
# Swinging Color Bars v.1.0 2/0/2019 
# ----------------------------------------------------------------

%include symbols
%include hsl-sequencer
%play-macro bars-app

$num-instances 5
#$instance-width `int(<NUM-LEDS>/10)`
#$instance-width `<NUM-LEDS>/6`
$instance-width 12

%allow-mutability
$HSL-ANGLE `int(360/<num-instances>)`
$HSL-TIME 1000

$base-next-time 50
$draw-mode <DRAW-WRITE>
$brightness <BRIGHTNESS-AUTO>
$render-time <base-next-time>
$fade-rate 9000
$low-limit `int(<instance-width>/2)`
$high-limit `<NUM-LEDS>-<low-limit>`
$add-time 3
$refresh-time 50
$bar-step 1
$use-computed-value True
$bar-sequencer cosine-sequencer

[bars-app 10]
    start-application
 
<<< <draw-mode> != <DRAW-WRITE>
    # set the preset draw mode
    <draw-mode>
    set-draw-mode
>>>

    # set the preset brightness level
    <brightness>
    set-brightness

    # start the macro instances
    [[[start <num-instances>]]]

    # start up the palette color sequencer
    (hsl-sequencer-start)

    # schedule the display rendering
    (render-all <render-time>)

    (refresh <refresh-time>)

[refresh]
    refresh-display

[render-all]
    <FAST-ERASE-BUFFER>
    erase-buffer
    [[[draw <num-instances>]]]

(((bar <num-instances> INSTANCE `INSTANCE*<add-time>+<base-next-time>`)))

[[bar INSTANCE PALETTE TIME

    [start-INSTANCE]
        {seq-INSTANCE},<high-limit>,<low-limit>
        <bar-sequencer>

        (advance-INSTANCE TIME)

    [advance-INSTANCE]
        {seq-INSTANCE},<GET-NEXT>,<bar-step>
        advance-sequence

    [draw-INSTANCE]
        <low-limit>
        push

<<< <use-computed-value> == True
        {seq-INSTANCE}, <GET-COMPUTED>
>>>
<<< <use-computed-value> == False
        {seq-INSTANCE}, <GET-CURRENT>
>>>
        get-sequence
        push
	sub-equals

        <instance-width>
        recall

        set-position
        {{
            PALETTE
            add-palette-color
#            darken
#            darken
            fill
        }}
]]

