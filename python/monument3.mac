%include symbols
%include hsl-sequencer

%allow-mutability
$HSL-ANGLE 20
#40

# this doesn't work because the variable keeps it's previous value until eventually being changed when the variables are resolved
#$HSL-TIME `<color-sequence-time>*<time-factor>`

$HSL-TIME 1250

%include colors

$inner-rotate-time 1600
$outer-rotate-time 800
$color-sequence-time 250
$time-factor 4

%play-macro monument-app

[monument-app 10]
  start-application
  <DEFAULT-BRIGHTNESS>
  set-brightness
  (hsl-sequencer-start)
  (setup)

[demo11 11]
  (monument-app)

[demo12 12]
  (monument-app)

[demo13 13]
  (colors-app)

[setup]
  (set-schedules)
  (setup-rings)
#  (hsl-sequencer `<color-sequence-time>*<time-factor>`)

[set-schedules]
  (rotate-outerl `<outer-rotate-time>*<time-factor>`)
  (rotate-innerl `<inner-rotate-time>*<time-factor>`)
  (rotate-outerm `<outer-rotate-time>*<time-factor>`)
  (rotate-innerm `<inner-rotate-time>*<time-factor>`)
  (rotate-outerr `<outer-rotate-time>*<time-factor>`)
  (rotate-innerr `<inner-rotate-time>*<time-factor>`)

[setup-rings]
  ((setup-ring-call innerl))
  ((setup-ring-call outerl))
  ((setup-ring-call innerm))
  ((setup-ring-call outerm))
  ((setup-ring-call innerr))
  ((setup-ring-call outerr))

((setup-ring outerl 5 4 0 1 2 ))
((setup-ring innerl 6 2 0 1 2))
((setup-ring outerm 8 4 3 4 5))
((setup-ring innerm 9 2 3 4 5))
((setup-ring outerr 11 4 6 7 8))
((setup-ring innerr 12 2 6 7 8))

((rotate-ring innerl 5))
((rotate-ring outerl 6))
((rotate-ring innerm 8))
((rotate-ring outerm 9))
((rotate-ring innerr 11))
((rotate-ring outerr 12))

[[setup-ring-call NAME
  (setup-ring-NAME)
]]

[[setup-ring NAME ZONE ZOOM COLOR1 COLOR2 COLOR3
  [setup-ring-NAME]
    ZONE
    set-zone
    {{
      COLOR1
      add-dynamic-color
      COLOR2
      add-dynamic-color
      COLOR3
      add-dynamic-color
      3,0,ZOOM
      copy
    }}
]]

[[rotate-ring NAME ZONE
  [rotate-NAME]
    ZONE
    set-zone
    {{
      do-animated-rotation
      refresh-display
    }}
]]

