# ----------------------------------------------------------------
# 
# 
# ----------------------------------------------------------------

%include symbols
%include hsl-sequencer

$draw-mode <DRAW-MIX>
$brightness <BRIGHTNESS-AUTO>

$render-time 200
$advance-time-x 50
$advance-time-y 45
$step-time 50
$fade-type sfd

$color 0

$factor 4
$max 16

$margin 2
$upper `<max>-<margin>`
$lower <margin>
#$high-limit `<upper>*<factor>`
#$low-limit `<lower>*<factor>`

$fade-rate 9000

# notes:
# using mixed draw mode so the colors intermingle
# use a fast fade to avoid clutter

%run-macro circle-app

# set up the application on macro #10
[circle-app 10]
    application
 
    # set the preset draw mode
    <draw-mode>
    draw-mode

    <CONFIG-FADE-RATE>,<fade-rate>
    configure

    # set the preset brightness level
    <brightness>
    level

    # start up the palette color sequencer
    (hsl-sequencer-start)

    # start up the circle processing
    (((circle-init 1)))

    # schedule the display rendering
    (render <render-time>)

((circle 0 50 45 50 `<upper>*<factor>` `<lower>*<factor>` 4 0))

[[circle-init INSTANCE
  (circle-init-INSTANCE)
]]

[[circle INSTANCE TIMEX TIMEY TIMES HIGH LOW FACTOR COLOR

    [circle-init-INSTANCE]
        # set up the sequencers
        (circle-setup-INSTANCE)

        # schedule the sequencer advance and draw
        (circle-advance-x-INSTANCE TIMEX)
        (circle-advance-y-INSTANCE TIMEY)
        (circle-step-INSTANCE TIMES)

    [circle-setup-INSTANCE]
        # allocate a sequencer for X
        {seq-x-INSTANCE},HIGH,LOW
        wheel-cosine-sequencer

        # allocate a sequencer for Y
        {seq-y-INSTANCE},HIGH,LOW
        wheel-sine-sequencer

        # allocate a sequencer for drawing X
        {seq-step-x-INSTANCE},HIGH
        wheel-sequencer

        # allocate a sequencer for drawing Y
        {seq-step-y-INSTANCE},HIGH
        wheel-sequencer

    [circle-advance-x-INSTANCE]
        <seq-x-INSTANCE>,<GET-NEXT>
        sequence

    [circle-advance-y-INSTANCE]
        <seq-y-INSTANCE>,<GET-NEXT>
        sequence

    [circle-math-x-INSTANCE]
        <seq-x-INSTANCE>,<GET-COMPUTED>
        sequence
        push
        FACTOR
        push
        div

    [circle-math-y-INSTANCE]
        <seq-y-INSTANCE>,<GET-COMPUTED>
        sequence
        push
        FACTOR
        push
        div

    [circle-draw-INSTANCE]
        COLOR
        palette-color
        <fade-type>

    [circle-step-INSTANCE]
        <circle-draw-INSTANCE>
        push

        <seq-step-y-INSTANCE>,<MACRO-SEQ>,<circle-math-y-INSTANCE>
        sequence
        push

        <seq-step-x-INSTANCE>,<MACRO-SEQ>,<circle-math-x-INSTANCE>
        sequence
        push

        recall
        xy-position

        reset
]]

